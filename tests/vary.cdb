
def test01():
    __cdbkernel__=create_scope()
    x^{\mu}::Coordinate;
    x::Coordinate;
    #x::Implicit(x^{\mu});
    \phi::Depends(x);
    \partial{#}::PartialDerivative;
    ex:= \int{ \partial_{\mu}{ \epsilon^{\mu} \phi } }{x};
    integrate_by_parts(ex, $\epsilon$);
    assert(ex==0)
    print('Test 01 passed')

test01()

def test02():
    __cdbkernel__=create_scope();
    \partial{#}::PartialDerivative;
    ex:= \int{ \partial_{\mu}{ \delta{\phi} } \phi \chi }{x};
    integrate_by_parts(ex, $\epsilon$);
    integrate_by_parts(ex, $\delta{\phi}$, repeat=True);
    tst:= \int{ \delta{\phi} \partial_{\mu}{  \phi \chi } }{x} + @(ex);
    assert(tst==0)
    print('Test 02 passed')
    
test02()
    
def test03():
    __cdbkernel__=create_scope();
    \partial{#}::PartialDerivative;
    ex:= \int{ \phi \chi \partial_{\mu}{ \delta{\phi} } }{x};
    integrate_by_parts(ex, $\delta{\phi}$);
    tst:= \int{ \partial_{\mu}{\phi \chi}  \delta{\phi} }{x} + @(ex);
    assert(tst==0)
    print('Test 03 passed')
    
test03()
    
def test04():
    __cdbkernel__=create_scope();
    \partial{#}::PartialDerivative;
    ex:= \int{ \phi \chi \partial_{\mu}{ \delta{\phi} } + \partial_{\mu}{ \delta{\phi} } \phi \chi }{x};
    integrate_by_parts(ex, $\delta{\phi}$);
    tst:= \int{ -\partial_{\mu}{ \phi \chi } \delta{\phi} - \delta{\phi} \partial_{\mu}{ \phi \chi } }{x} - @(ex);
    assert(tst==0)
    print('Test 04 passed')
    
test04()

def test05():
    __cdbkernel__=create_scope();
    \partial{#}::PartialDerivative;
    ex:= \int{ \phi \chi \partial_{\mu}{ \delta{\phi} } \Phi \Chi }{x};
    integrate_by_parts(ex, $\delta{\phi}$);
    tst:=\int{ -\partial_{\mu}{ \phi \chi } \delta{\phi} \Phi \Chi - \phi \chi \delta{\phi} \partial_{\mu}{ \Phi \Chi} }{x} - @(ex);
    assert(tst==0)
    print('Test 05 passed')
    
test05()

def test06():
    __cdbkernel__=create_scope();
    x::Coordinate;
    \phi::Depends(x);
    \delta{\phi}::Depends(x);
    \partial{#}::PartialDerivative;
    ex:= -1/2 \int{m**2 \phi**2}{x};
    vary(_, $\phi -> \delta{\phi}$);
    tst:= - \int{m**2 \delta{\phi}\phi}{x} - @(ex);
    assert(tst)
    print('Test 06 passed')
    
test06()

def test07():
    __cdbkernel__=create_scope();
    ex:= \commutator{a}{b};
    vary(_, $a -> \delta{a}, b->\delta{b}$)
    tst:= \commutator{\delta{a}}{b} + \commutator{a}{\delta{b}} - @(ex);
    assert(tst==0)

test07()

# def test08():
#     __cdbkernel__=create_scope();
#     ex:= \log(a);
#     vary(_, $a -> \delta{a}$)
#     tst:= \log(\delta{a}) - @(ex);
#     assert(tst==0)
#
# test08()
